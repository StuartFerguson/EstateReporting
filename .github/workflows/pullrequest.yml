name: Build and Test Pull Requests

on:
  pull_request:
    branches:
    - master

jobs:
  build:
    name: "Build and Test Pull Requests"
    env:
        ASPNETCORE_ENVIRONMENT: "Production"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    - name: Restore Nuget Packages
      run: dotnet restore EstateReporting.sln --source https://api.nuget.org/v3/index.json --source https://www.myget.org/F/transactionprocessing/api/v3/index.json

    - name: Build Code
      run: dotnet build EstateReporting.sln --configuration Release

    - name: Run Unit Tests
      run: |
        echo "ASPNETCORE_ENVIRONMENT are > ${ASPNETCORE_ENVIRONMENT}"
        dotnet test "EstateReporting.BusinessLogic.Tests\EstateReporting.BusinessLogic.Tests.csproj"
        dotnet test "EstateReporting.Repository.Tests\EstateReporting.Repository.Tests.csproj"

    - name: Build Docker Image
      run: docker build . --file EstateReporting/Dockerfile --tag estatereporting:latest
        
    #- name: Run Integration Tests
    #  run: dotnet test "EstateManagement.IntegrationTests\EstateManagement.IntegrationTests.csproj" --filter Category=PRTest

    - name: Get the last version
      id: get_version
      run: echo ::set-output name=VERSION::$(git tag --sort=committerdate  | tail -1)
    
    - name: Print Version
      id: next_version
      run: echo ::set-output name=VERSION::${{ steps.get_version.outputs.VERSION }}.$GITHUB_RUN_NUMBER

    - name: Build and Publish Nuget Packages
      run: |
        dotnet pack "EstateReporting.Database\EstateReporting.Database.csproj" /p:PackageVersion=${{ steps.next_version.outputs.VERSION }} --output Nugets -c Release            
        dotnet nuget push Nugets/EstateReporting.Database.${{ steps.next_version.outputs.VERSION }}.nupkg --api-key ${{ secrets.MYGET_APIKEY }} --source https://www.myget.org/F/transactionprocessing/api/v2/package