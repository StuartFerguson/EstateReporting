// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.5.0.0
//      SpecFlow Generator Version:3.5.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EstateReporting.IntegrationTests.Reporting
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.5.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "base")]
    [Xunit.TraitAttribute("Category", "shared")]
    public partial class TransactionsByOperatorReportsFeature : object, Xunit.IClassFixture<TransactionsByOperatorReportsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = new string[] {
                "base",
                "shared"};
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "TransactionsByOperatorReports.feature"
#line hidden
        
        public TransactionsByOperatorReportsFeature(TransactionsByOperatorReportsFeature.FixtureData fixtureData, EstateReporting_IntegrationTests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Reporting", "TransactionsByOperatorReports", null, ProgrammingLanguage.CSharp, new string[] {
                        "base",
                        "shared"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "DisplayName",
                        "Description"});
            table67.AddRow(new string[] {
                        "estateManagement",
                        "Estate Managememt REST Scope",
                        "A scope for Estate Managememt REST"});
            table67.AddRow(new string[] {
                        "transactionProcessor",
                        "Transaction Processor REST  Scope",
                        "A scope for Transaction Processor REST"});
#line 6
 testRunner.Given("I create the following api scopes", ((string)(null)), table67, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "ResourceName",
                        "DisplayName",
                        "Secret",
                        "Scopes",
                        "UserClaims"});
            table68.AddRow(new string[] {
                        "estateManagement",
                        "Estate Managememt REST",
                        "Secret1",
                        "estateManagement",
                        "MerchantId, EstateId, role"});
            table68.AddRow(new string[] {
                        "transactionProcessor",
                        "Transaction Processor REST",
                        "Secret1",
                        "transactionProcessor",
                        ""});
            table68.AddRow(new string[] {
                        "voucherManagement",
                        "Voucher Management REST",
                        "Secret1",
                        "voucherManagement",
                        ""});
#line 11
 testRunner.Given("the following api resources exist", ((string)(null)), table68, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClientId",
                        "ClientName",
                        "Secret",
                        "AllowedScopes",
                        "AllowedGrantTypes"});
            table69.AddRow(new string[] {
                        "serviceClient",
                        "Service Client",
                        "Secret1",
                        "estateManagement,transactionProcessor,voucherManagement",
                        "client_credentials"});
#line 17
 testRunner.Given("the following clients exist", ((string)(null)), table69, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "ClientId"});
            table70.AddRow(new string[] {
                        "serviceClient"});
#line 21
 testRunner.Given("I have a token to access the estate management and transaction processor resource" +
                    "s", ((string)(null)), table70, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName"});
            table71.AddRow(new string[] {
                        "Test Estate 1"});
            table71.AddRow(new string[] {
                        "Test Estate 2"});
#line 25
 testRunner.Given("I have created the following estates", ((string)(null)), table71, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "RequireCustomMerchantNumber",
                        "RequireCustomTerminalNumber"});
            table72.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "True",
                        "True"});
            table72.AddRow(new string[] {
                        "Test Estate 1",
                        "Voucher",
                        "True",
                        "True"});
            table72.AddRow(new string[] {
                        "Test Estate 2",
                        "Safaricom",
                        "True",
                        "True"});
            table72.AddRow(new string[] {
                        "Test Estate 2",
                        "Voucher",
                        "True",
                        "True"});
#line 30
 testRunner.Given("I have created the following operators", ((string)(null)), table72, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "ContractDescription"});
            table73.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "Safaricom Contract"});
            table73.AddRow(new string[] {
                        "Test Estate 1",
                        "Voucher",
                        "Health Care Centre Contract"});
            table73.AddRow(new string[] {
                        "Test Estate 2",
                        "Safaricom",
                        "Safaricom Contract"});
            table73.AddRow(new string[] {
                        "Test Estate 2",
                        "Voucher",
                        "Health Care Centre Contract"});
#line 37
 testRunner.Given("I create a contract with the following values", ((string)(null)), table73, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "ContractDescription",
                        "ProductName",
                        "DisplayText",
                        "Value"});
            table74.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "Safaricom Contract",
                        "Variable Topup",
                        "Custom",
                        ""});
            table74.AddRow(new string[] {
                        "Test Estate 1",
                        "Voucher",
                        "Health Care Centre Contract",
                        "10 KES",
                        "10 KES",
                        "10"});
            table74.AddRow(new string[] {
                        "Test Estate 2",
                        "Safaricom",
                        "Safaricom Contract",
                        "Variable Topup",
                        "Custom",
                        ""});
            table74.AddRow(new string[] {
                        "Test Estate 2",
                        "Voucher",
                        "Health Care Centre Contract",
                        "10 KES",
                        "10 KES",
                        "10"});
#line 44
 testRunner.When("I create the following Products", ((string)(null)), table74, "When ");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "EstateName",
                        "OperatorName",
                        "ContractDescription",
                        "ProductName",
                        "CalculationType",
                        "FeeDescription",
                        "Value"});
            table75.AddRow(new string[] {
                        "Test Estate 1",
                        "Safaricom",
                        "Safaricom Contract",
                        "Variable Topup",
                        "Fixed",
                        "Merchant Commission",
                        "2.50"});
            table75.AddRow(new string[] {
                        "Test Estate 2",
                        "Safaricom",
                        "Safaricom Contract",
                        "Variable Topup",
                        "Percentage",
                        "Merchant Commission",
                        "0.85"});
#line 51
 testRunner.When("I add the following Transaction Fees", ((string)(null)), table75, "When ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "MerchantName",
                        "AddressLine1",
                        "Town",
                        "Region",
                        "Country",
                        "ContactName",
                        "EmailAddress",
                        "EstateName"});
            table76.AddRow(new string[] {
                        "Test Merchant 1",
                        "Address Line 1",
                        "TestTown",
                        "Test Region",
                        "United Kingdom",
                        "Test Contact 1",
                        "testcontact1@merchant1.co.uk",
                        "Test Estate 1"});
            table76.AddRow(new string[] {
                        "Test Merchant 2",
                        "Address Line 1",
                        "TestTown",
                        "Test Region",
                        "United Kingdom",
                        "Test Contact 2",
                        "testcontact2@merchant2.co.uk",
                        "Test Estate 1"});
            table76.AddRow(new string[] {
                        "Test Merchant 3",
                        "Address Line 1",
                        "TestTown",
                        "Test Region",
                        "United Kingdom",
                        "Test Contact 3",
                        "testcontact3@merchant2.co.uk",
                        "Test Estate 2"});
#line 56
 testRunner.Given("I create the following merchants", ((string)(null)), table76, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "OperatorName",
                        "MerchantName",
                        "MerchantNumber",
                        "TerminalNumber",
                        "EstateName"});
            table77.AddRow(new string[] {
                        "Safaricom",
                        "Test Merchant 1",
                        "00000001",
                        "10000001",
                        "Test Estate 1"});
            table77.AddRow(new string[] {
                        "Voucher",
                        "Test Merchant 1",
                        "00000001",
                        "10000001",
                        "Test Estate 1"});
            table77.AddRow(new string[] {
                        "Safaricom",
                        "Test Merchant 2",
                        "00000002",
                        "10000002",
                        "Test Estate 1"});
            table77.AddRow(new string[] {
                        "Voucher",
                        "Test Merchant 2",
                        "00000002",
                        "10000002",
                        "Test Estate 1"});
            table77.AddRow(new string[] {
                        "Safaricom",
                        "Test Merchant 3",
                        "00000003",
                        "10000003",
                        "Test Estate 2"});
            table77.AddRow(new string[] {
                        "Voucher",
                        "Test Merchant 3",
                        "00000003",
                        "10000003",
                        "Test Estate 2"});
#line 62
 testRunner.Given("I have assigned the following  operator to the merchants", ((string)(null)), table77, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "DeviceIdentifier",
                        "MerchantName",
                        "EstateName"});
            table78.AddRow(new string[] {
                        "123456780",
                        "Test Merchant 1",
                        "Test Estate 1"});
            table78.AddRow(new string[] {
                        "123456781",
                        "Test Merchant 2",
                        "Test Estate 1"});
            table78.AddRow(new string[] {
                        "123456782",
                        "Test Merchant 3",
                        "Test Estate 2"});
#line 71
 testRunner.Given("I have assigned the following devices to the merchants", ((string)(null)), table78, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Reference",
                        "Amount",
                        "DateTime",
                        "MerchantName",
                        "EstateName"});
            table79.AddRow(new string[] {
                        "Deposit1",
                        "3000.00",
                        "Today",
                        "Test Merchant 1",
                        "Test Estate 1"});
            table79.AddRow(new string[] {
                        "Deposit1",
                        "1000.00",
                        "Today",
                        "Test Merchant 2",
                        "Test Estate 1"});
            table79.AddRow(new string[] {
                        "Deposit1",
                        "1000.00",
                        "Today",
                        "Test Merchant 3",
                        "Test Estate 2"});
#line 77
 testRunner.Given("I make the following manual merchant deposits", ((string)(null)), table79, "Given ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Sales Transactions By Operator - Transactions All For Same Operator")]
        [Xunit.TraitAttribute("FeatureTitle", "TransactionsByOperatorReports")]
        [Xunit.TraitAttribute("Description", "Sales Transactions By Operator - Transactions All For Same Operator")]
        public virtual void SalesTransactionsByOperator_TransactionsAllForSameOperator()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sales Transactions By Operator - Transactions All For Same Operator", null, tagsOfScenario, argumentsOfScenario);
#line 83
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "TransactionNumber",
                            "TransactionType",
                            "MerchantName",
                            "DeviceIdentifier",
                            "EstateName",
                            "OperatorName",
                            "TransactionAmount",
                            "CustomerAccountNumber",
                            "CustomerEmailAddress",
                            "ContractDescription",
                            "ProductName"});
                table80.AddRow(new string[] {
                            "LastMonth",
                            "1",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "10.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup"});
                table80.AddRow(new string[] {
                            "LastWeek",
                            "2",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "5.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup"});
                table80.AddRow(new string[] {
                            "LastWeek",
                            "3",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "25.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup"});
                table80.AddRow(new string[] {
                            "Yesterday",
                            "4",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "15.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup"});
                table80.AddRow(new string[] {
                            "Yesterday",
                            "5",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "3.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup"});
                table80.AddRow(new string[] {
                            "Today",
                            "6",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "40.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup"});
                table80.AddRow(new string[] {
                            "Today",
                            "7",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "60.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup"});
                table80.AddRow(new string[] {
                            "Today",
                            "8",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup"});
#line 84
 testRunner.When("I perform the following transactions", ((string)(null)), table80, "When ");
#line hidden
                TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber",
                            "ResponseCode",
                            "ResponseMessage"});
                table81.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "1",
                            "0000",
                            "SUCCESS"});
                table81.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "2",
                            "1008",
                            "DECLINED BY OPERATOR"});
                table81.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "3",
                            "0000",
                            "SUCCESS"});
                table81.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "4",
                            "0000",
                            "SUCCESS"});
                table81.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "5",
                            "1008",
                            "DECLINED BY OPERATOR"});
                table81.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "6",
                            "0000",
                            "SUCCESS"});
                table81.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "7",
                            "0000",
                            "SUCCESS"});
                table81.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "8",
                            "0000",
                            "SUCCESS"});
#line 95
 testRunner.Then("transaction response should contain the following information", ((string)(null)), table81, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                            "OperatorName",
                            "NumberOfTransactions",
                            "ValueOfTransactions"});
                table82.AddRow(new string[] {
                            "Safaricom",
                            "3",
                            "200.00"});
#line 107
 testRunner.When("I get the Estate Transactions By Operator Report for Estate \'Test Estate 1\' with " +
                        "the Start Date \'Today\' and the End Date \'Today\' the following data is returned", ((string)(null)), table82, "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Sales Transactions By Operator - Transactions For Mutiple Operator")]
        [Xunit.TraitAttribute("FeatureTitle", "TransactionsByOperatorReports")]
        [Xunit.TraitAttribute("Description", "Sales Transactions By Operator - Transactions For Mutiple Operator")]
        [Xunit.TraitAttribute("Category", "PRTest")]
        public virtual void SalesTransactionsByOperator_TransactionsForMutipleOperator()
        {
            string[] tagsOfScenario = new string[] {
                    "PRTest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Sales Transactions By Operator - Transactions For Mutiple Operator", null, tagsOfScenario, argumentsOfScenario);
#line 112
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 4
this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                            "DateTime",
                            "TransactionNumber",
                            "TransactionType",
                            "MerchantName",
                            "DeviceIdentifier",
                            "EstateName",
                            "OperatorName",
                            "TransactionAmount",
                            "CustomerAccountNumber",
                            "CustomerEmailAddress",
                            "ContractDescription",
                            "ProductName",
                            "RecipientMobile"});
                table83.AddRow(new string[] {
                            "LastMonth",
                            "1",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "10.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "LastWeek",
                            "2",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "5.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "LastWeek",
                            "3",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "25.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Yesterday",
                            "4",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "15.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Yesterday",
                            "5",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "3.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Today",
                            "6",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "40.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Today",
                            "7",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "60.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Today",
                            "8",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Today",
                            "9",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Voucher",
                            "10.00",
                            "123456789",
                            "",
                            "Health Care Centre Contract",
                            "10 KES",
                            "123456789"});
                table83.AddRow(new string[] {
                            "Today",
                            "10",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Voucher",
                            "10.00",
                            "123456789",
                            "",
                            "Health Care Centre Contract",
                            "10 KES",
                            "123456789"});
                table83.AddRow(new string[] {
                            "Today",
                            "11",
                            "Sale",
                            "Test Merchant 1",
                            "123456780",
                            "Test Estate 1",
                            "Voucher",
                            "10.00",
                            "123456789",
                            "",
                            "Health Care Centre Contract",
                            "10 KES",
                            "123456789"});
                table83.AddRow(new string[] {
                            "Today",
                            "1",
                            "Sale",
                            "Test Merchant 2",
                            "123456781",
                            "Test Estate 1",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Today",
                            "2",
                            "Sale",
                            "Test Merchant 2",
                            "123456781",
                            "Test Estate 1",
                            "Safaricom",
                            "5.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Today",
                            "3",
                            "Sale",
                            "Test Merchant 2",
                            "123456781",
                            "Test Estate 1",
                            "Safaricom",
                            "25.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Today",
                            "4",
                            "Sale",
                            "Test Merchant 2",
                            "123456781",
                            "Test Estate 1",
                            "Safaricom",
                            "150.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Today",
                            "5",
                            "Sale",
                            "Test Merchant 2",
                            "123456781",
                            "Test Estate 1",
                            "Voucher",
                            "10.00",
                            "123456789",
                            "",
                            "Health Care Centre Contract",
                            "10 KES",
                            "123456789"});
                table83.AddRow(new string[] {
                            "Today",
                            "6",
                            "Sale",
                            "Test Merchant 2",
                            "123456781",
                            "Test Estate 1",
                            "Voucher",
                            "10.00",
                            "123456789",
                            "",
                            "Health Care Centre Contract",
                            "10 KES",
                            "123456789"});
                table83.AddRow(new string[] {
                            "LastMonth",
                            "1",
                            "Sale",
                            "Test Merchant 3",
                            "123456782",
                            "Test Estate 2",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "LastWeek",
                            "2",
                            "Sale",
                            "Test Merchant 3",
                            "123456782",
                            "Test Estate 2",
                            "Safaricom",
                            "200.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Yesterday",
                            "3",
                            "Sale",
                            "Test Merchant 3",
                            "123456782",
                            "Test Estate 2",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Today",
                            "4",
                            "Sale",
                            "Test Merchant 3",
                            "123456782",
                            "Test Estate 2",
                            "Safaricom",
                            "100.00",
                            "123456789",
                            "",
                            "Safaricom Contract",
                            "Variable Topup",
                            ""});
                table83.AddRow(new string[] {
                            "Today",
                            "5",
                            "Sale",
                            "Test Merchant 3",
                            "123456782",
                            "Test Estate 2",
                            "Voucher",
                            "10.00",
                            "123456789",
                            "",
                            "Health Care Centre Contract",
                            "10 KES",
                            "123456789"});
                table83.AddRow(new string[] {
                            "Today",
                            "6",
                            "Sale",
                            "Test Merchant 3",
                            "123456782",
                            "Test Estate 2",
                            "Voucher",
                            "10.00",
                            "123456789",
                            "",
                            "Health Care Centre Contract",
                            "10 KES",
                            "123456789"});
#line 113
 testRunner.When("I perform the following transactions", ((string)(null)), table83, "When ");
#line hidden
                TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                            "EstateName",
                            "MerchantName",
                            "TransactionNumber",
                            "ResponseCode",
                            "ResponseMessage"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "1",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "2",
                            "1008",
                            "DECLINED BY OPERATOR"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "3",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "4",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "5",
                            "1008",
                            "DECLINED BY OPERATOR"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "6",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "7",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "8",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "9",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "10",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 1",
                            "11",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 2",
                            "1",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 2",
                            "2",
                            "1008",
                            "DECLINED BY OPERATOR"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 2",
                            "3",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 2",
                            "4",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 2",
                            "5",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 1",
                            "Test Merchant 2",
                            "6",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 2",
                            "Test Merchant 3",
                            "1",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 2",
                            "Test Merchant 3",
                            "2",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 2",
                            "Test Merchant 3",
                            "3",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 2",
                            "Test Merchant 3",
                            "4",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 2",
                            "Test Merchant 3",
                            "5",
                            "0000",
                            "SUCCESS"});
                table84.AddRow(new string[] {
                            "Test Estate 2",
                            "Test Merchant 3",
                            "6",
                            "0000",
                            "SUCCESS"});
#line 141
 testRunner.Then("transaction response should contain the following information", ((string)(null)), table84, "Then ");
#line hidden
                TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                            "OperatorName",
                            "NumberOfTransactions",
                            "ValueOfTransactions"});
                table85.AddRow(new string[] {
                            "Safaricom",
                            "9",
                            "525.00"});
                table85.AddRow(new string[] {
                            "Health Care Centre",
                            "5",
                            "50.00"});
#line 169
 testRunner.When("I get the Estate Transactions By Operator Report for Estate \'Test Estate 1\' with " +
                        "the Start Date \'LastMonth\' and the End Date \'Today\' the following data is return" +
                        "ed", ((string)(null)), table85, "When ");
#line hidden
                TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                            "OperatorName",
                            "NumberOfTransactions",
                            "ValueOfTransactions"});
                table86.AddRow(new string[] {
                            "Safaricom",
                            "4",
                            "500.00"});
                table86.AddRow(new string[] {
                            "Health Care Centre",
                            "2",
                            "20.00"});
#line 174
 testRunner.When("I get the Estate Transactions By Operator Report for Estate \'Test Estate 2\' with " +
                        "the Start Date \'LastMonth\' and the End Date \'Today\' the following data is return" +
                        "ed", ((string)(null)), table86, "When ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.5.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                TransactionsByOperatorReportsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                TransactionsByOperatorReportsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
